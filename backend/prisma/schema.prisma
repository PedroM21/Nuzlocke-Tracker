// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  email    String    @unique
  password String
  runs     Run[]     @relation("UserRuns")
  ruleset  Ruleset[] @relation("UserRulesets")
}

model Run {
  id         Int         @id @default(autoincrement())
  userId     Int
  user       User        @relation("UserRuns", fields: [userId], references: [id])
  runName    String
  generation String
  game       String
  type       String      @default("standard")
  attempt    Int
  isActive   Boolean     @default(false)
  completed  Boolean     @default(false)
  rulesetId  Int?       @unique
  ruleset    Ruleset?   @relation("RunRuleSets", fields: [rulesetId], references: [id])
  rundetail  RunDetail[] @relation("RunDetails")
}

model Ruleset {
  id          Int    @id @default(autoincrement())
  userId      Int
  user        User   @relation("UserRulesets", fields: [userId], references: [id])
  ruleSetText String
  run         Run?   @relation("RunRuleSets")
}

model RunDetail {
  id       Int     @id @default(autoincrement())
  runId    Int
  run      Run     @relation("RunDetails", fields: [runId], references: [id])
  location String
  caught   Boolean
  name     String
  nickname String
  isAlive  Boolean
}
